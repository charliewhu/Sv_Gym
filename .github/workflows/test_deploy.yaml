name: Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  POSTGRES_PRISMA_URL: postgresql://prisma:prisma@localhost:5433/tests
  POSTGRES_URL_NON_POOLING: postgresql://prisma:prisma@localhost:5433/tests
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
      - name: Run tests
        run: pnpm run check

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
      - name: Run tests
        run: pnpm run test:unit

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
      - uses: ./.github/actions/docker-compose
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      - name: Run tests
        run: pnpm run test

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy main
    needs: [check, unit-tests, e2e-tests]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build
      - name: Install dependencies
        run: pnpm install
      - name: Run production migration
        run: pnpm run migrate:deploy
        env:
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
          POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
